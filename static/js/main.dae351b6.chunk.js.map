{"version":3,"sources":["components/header/Header.js","algorithms/heapSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","algorithms/bubbleSort.js","components/Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","colorArray","heapify","array","length","i","console","log","largest","left","right","push","heapSort","speed","disable","Math","floor","k","forEach","item","idx","setTimeout","barI","document","getElementById","barLargest","style","backgroundColor","iHeight","largestHeight","height","selectionSort","counter","biggest","begin","num","current","barCurrent","barBiggest","lastBar","lastBarHeight","biggestHeight","runColors","quickSortHelper","startIdx","endIdx","pivot","swap","j","quickSort","pivotHeight","leftHeight","rightHeight","barPivot","barLeft","barRight","bubbleSort","isSorted","index","bar1idx","bar2idx","bar1value","bar2value","bar1","bar2","Visualizer","isTablet","useState","fullArray","setArray","madArray","setMadArray","setSpeed","setDisable","options","stop","useMediaQuery","query","tablet","makeArray","e","window","location","reload","randomInteger","min","max","random","useEffect","newArray","generateArray","id","display","Button","variant","size","onClick","Row","alignItems","justifyContent","Form","Range","disabled","width","color","value","onChange","changeEvent","target","position","top","Label","marginBottom","zIndex","undefined","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dae351b6.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css'\n\nfunction Header() {\n\n    return(\n        <h1 className=\"title\">Sorting Visualizer</h1>\n    )\n}\n\nexport default Header;","let colorArray = [];\n// let disabled;\n\n// function disabling(disabled) {\n//     disabled(true)\n// }\n\nfunction heapSort(array, speed, disable) {\n    // disabled = disable.setDisable\n    // console.log(disabled)\n    // disabling(disabled)\n    let countdown = array.length * speed;\n    let length = array.length;\n    let i = Math.floor(length / 2 - 1);\n    let k = length - 1;\n    \n    while (i >= 0) {\n        // (function(i) {\n        // setTimeout(() => {\n        //     console.log(i)\n            heapify(array, length, i);\n            i--;\n\n    //     }, i * 2)\n    // })(i--)\n    }\n\n    while (k >= 0) {\n                [array[0], array[k]] = [array[k], array[0]];\n                colorArray.push([0, k, array[k], array[0]])\n\n                heapify(array, k, 0);\n\n    \n        k--;\n    }\n    console.log(array)\n    console.log(colorArray)\n        colorArray.forEach((item, idx) => {\n            let i = item[0];\n            let largest = item[1];\n            if (i < 100 && largest < 100\n                 ) {\n                setTimeout(() => {\n                    console.log(idx)\n                    const barI = document.getElementById(i);\n                    const barLargest = document.getElementById(largest);\n                    barI.style.backgroundColor = \"purple\";\n                    barLargest.style.backgroundColor = \"yellow\";\n                    let iHeight = item[2];\n                    let largestHeight = item[3];\n                    console.log(i, iHeight, largest, largestHeight)\n                    setTimeout(() => {\n                        barI.style.height = `${largestHeight}px`;\n                        barLargest.style.height = `${iHeight}px`;\n                        setTimeout(() => {\n                            barI.style.backgroundColor = \"white\";\n                            barLargest.style.backgroundColor = \"white\";\n                        }, speed)\n                    }, speed * 2)\n                }, idx * 4 * speed)\n\n            }\n            // setTimeout(() => {\n            //     disable.setDisable(false)\n            // }, array.length * speed * 20)\n        }) \n        \n\n    // return array;\n    // return disable\t\n}\n\nfunction heapify(array, length, i) {\n\n    console.log(length, i)\n    let largest = i;\n    let left = i * 2 + 1;\n    let right = left + 1;\n\n            if (left < length && array[left] > array[largest]) {\n                            largest = left;\n                            // colorRight = largest;\n                            // console.log(colorRight)\n                }\n            if (right < length && array[right] > array[largest]) {\n                largest = right;\n            }\n            if (largest !== i) colorArray.push([i, largest, array[i], array[largest]])\n\n            if (largest !== i) {\n\n                [array[i], array[largest]] = [array[largest], array[i]];\n                heapify(array, length, largest);\n            }\n    \n    }\n\n\n    export default heapSort;","let colorArray = [];\n\nfunction selectionSort(array, speed, disable) {\n    let counter = array.length - 1;\n      while (counter > 0) {\n          let biggest = 0;\n          for (let i = 0; i <= counter; i++) {\n              colorArray.push([i, biggest, array[i], array[biggest]])\n              if (array[i] > array[biggest]) biggest = i;\n          }\n          [array[biggest], array[counter]] = [array[counter], array[biggest]]\n          counter--;\n      }\n      runColors(colorArray, speed)\n          // disable.setDisable(true)\n\n      // setTimeout(() => {\n      //   disable.setDisable(false)\n      // }, array.length * speed * 20);\n      return array;\n  }\n\n  function runColors(array, speed) {\n    \n    let begin = 0;\n\n    for (let num = 0; num < array.length; num++) {\n        setTimeout(() => {\n          let current = array[num][0];\n          let biggest = array[num][1];\n              const barCurrent = document.getElementById(current);\n              const barBiggest = document.getElementById(biggest);\n              barCurrent.style.backgroundColor = \"orange\";\n              barBiggest.style.backgroundColor = \"turquoise\";\n              if (begin !== biggest) {\n                  const barStart = document.getElementById(begin);\n                  barStart.style.backgroundColor = \"white\";\n                  begin = biggest;\n              }\n              if (num === array.length - 1) {\n                const lastBar = document.getElementById(1);\n                const lastBarHeight = array[num][2];\n                const biggestHeight = array[num][3];\n                barBiggest.style.height = `${lastBarHeight}px`;\n                lastBar.style.height = `${biggestHeight}px`;\n                lastBar.style.backgroundColor = \"lightgrey\";\n                barBiggest.style.backgroundColor = \"lightgrey\";\n                return;\n              } else if (array[num + 1][0] === 0 || array[num][0] === 0) {\n                const lastBar = document.getElementById(array[num][0])\n                const lastBarHeight = array[num][2]\n                const biggestHeight = array[num][3]\n                barBiggest.style.height = `${lastBarHeight}px`;\n                lastBar.style.height = `${biggestHeight}px`;\n                lastBar.style.backgroundColor = \"lightgrey\"\n              } else {\n                setTimeout(() => {\n                  barCurrent.style.backgroundColor = \"white\";\n                }, speed)\n              }\n        }, num * speed)\n    }\n  }\n\n\n\n  export default selectionSort;","const colorArray = [];\n\nfunction quickSort(array, speed, disable) {\n  // disable.setDisable(true)\n\n    quickSortHelper(array, 0, array.length - 1);\n    runColors(colorArray, speed)\n    // setTimeout(() => {\n    //   disable.setDisable(false)\n    // }, array.length * speed * 35);\n      return array;\n  }\n  \n  function quickSortHelper(array, startIdx, endIdx) {\n      if (startIdx >= endIdx) {\n          return;\n      }\n      let pivot = startIdx;\n      let left = startIdx + 1;\n      let right = endIdx;\n      while (right >= left) {\n          if (array[left] > array[pivot] && array[right] < array[pivot]) {\n            swap(left, right, array)\n            colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n          if (array[left] <= array[pivot]) {\n              left++; \n              colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n          if (array[right] >= array[pivot]) {\n              right--;\n              colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n      }\n\n      swap(pivot, right, array)\n      colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n      let leftSubarrayIsSmaller = right - 1 - startIdx < endIdx - (right + 1)\n      //call the recursion on the smallest subarray first so tail recursion can handle the extra space \n      if (leftSubarrayIsSmaller) {\n          quickSortHelper(array, startIdx, right - 1);\n          quickSortHelper(array, right + 1, endIdx)\n      } else {\n          quickSortHelper(array, right + 1, endIdx);\n          quickSortHelper(array, startIdx, right - 1)\n      }\n  } \n\n  function runColors(array, speed) {\n    for (let i = 0; i < array.length; i++) {\n          setTimeout(() => {\n            const item = array[i]\n            if (item[0] === 100 || item[1] === 100 || item[2] === 100) return;\n            let pivot = item[0];\n            let left = item[1];\n            let right = item[2];\n            const pivotHeight = item[3];\n            const leftHeight = item[4];\n            const rightHeight = item[5];\n            const barPivot = document.getElementById(pivot);\n            const barLeft = document.getElementById(left);\n            const barRight = document.getElementById(right);\n\n            barPivot.style.backgroundColor = \"yellow\";\n            barLeft.style.backgroundColor = \"purple\";\n            barRight.style.backgroundColor = \"red\";\n\n            setTimeout(() => {\n              barPivot.style.height = `${pivotHeight}px`;\n              barLeft.style.height = `${leftHeight}px`;\n              barRight.style.height = `${rightHeight}px`;\n              setTimeout(() => {\n                // barPivot.style.backgroundColor = \"white\";\n                barLeft.style.backgroundColor = \"white\";\n                barRight.style.backgroundColor = \"white\";\n                barPivot.style.backgroundColor = \"white\";\n  \n              }, speed)\n  \n            }, speed * 2);\n          }, i * speed * 4)\n        }}\n\n  function swap(i, j, array) {\n      [array[i], array[j]] = [array[j], array[i]]\n  }\n\n  export default quickSort;\n  ","let colorArray = [];\n\n\nfunction bubbleSort(array, speed, disable) {\n    // disable.setDisable(true)\n    let countdown = array.length * speed * 20;\n    let counter = 0;\n    let isSorted = false;\n    // for (let i = 0; i < array.length - counter - 1; i++) {\n    while (!isSorted) {\n        isSorted = true;\n        for (let j = 0; j < array.length - counter - 1; j++ ) {\n            colorArray.push([j, j + 1, array[j], array[j + 1]])\n            // setTimeout(() => {\n                if (array[j] > array[j + 1]) {\n                    [array[j], array[j + 1]] = [array[j + 1], array[j]];\n                    isSorted = false;\n                    // setColorRight(j + 1)\n                    // setMadArray(array)\n                // } else {\n                //     // setColorRight(400)\n                }\n            // }, i * speed)\n        }\n        counter++;\n    }\n    console.log(colorArray)\n    runColors(colorArray, speed)\n    // setTimeout(() => {\n    //     disable.setDisable(false)\n    // }, countdown);\n}\n\nfunction runColors(array, speed) {\n    array.forEach((item, index) => {\n        setTimeout(() => {\n            \n        const [bar1idx, bar2idx, bar1value, bar2value] = item;\n        const bar1 = document.getElementById(bar1idx);\n        const bar2 = document.getElementById(bar2idx);\n        bar1.style.backgroundColor = \"turquoise\";\n        bar2.style.backgroundColor = \"yellow\";\n        if (bar1value > bar2value) {\n            setTimeout(() => {\n                bar1.style.height = `${bar2value}px`;\n                bar2.style.height = `${bar1value}px`;\n                bar2.style.backgroundColor = \"turquoise\"\n                bar1.style.backgroundColor = \"yellow\"\n                setTimeout(() => {\n                    bar1.style.backgroundColor = \"white\";\n                    bar2.style.backgroundColor = \"white\";\n                }, speed / 2);\n            }, speed);\n\n        } else {\n            setTimeout(() => {\n                bar1.style.backgroundColor = \"white\";\n                bar2.style.backgroundColor = \"white\"\n            }, speed / 2);\n        }\n    }, index * speed * 2);\n\n    })\n}\n\nexport default bubbleSort;\n\n// const bar1 = document.getElementById(j);\n// const bar2 = document.getElementById(j + 1)\n// bar1.style.backgroundColor = \"red\";\n// bar2.style.backgroundColor = \"yellow\";\n// bar1.style.height = `${array[j + 1]}px`\n// bar2.style.height = `${array[j]}px`\n","import React, { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport './visualizer.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport heapSort from '../algorithms/heapSort'\nimport selectionSort from '../algorithms/selectionSort'\nimport quickSort from '../algorithms/quickSort'\nimport bubbleSort from '../algorithms/bubbleSort'\n\n\nfunction Visualizer() {\n    const [fullArray, setArray] = useState([]);\n    // const [colorRight, setColorRight] = useState();\n\n    const [madArray, setMadArray] = useState([])\n    const [speed, setSpeed] = useState(1);\n    const [disable, setDisable] = useState(false)\n    // const [coverDiv, setCoverDiv] = useState(\"none\")\n    // console.log(coverDiv)\n    // const coverDiv = document.getElementById(\"coverDiv\")\n    const options = document.getElementById(\"options\")\n    const stop = document.getElementById(\"stop\")\n\n    const [tablet, setTablet] = useState(useMediaQuery({ query: '(max-width: 800px)' }))\n\n    let isTablet;\n    if (tablet) isTablet = \"none\"\n    else isTablet = \"block\"\n\n    console.log(speed)\n\n    useEffect(() => {\n        generateArray();\n    }, [])\n\n    function makeArray(e) {\n        window.location.reload();\n    }\n\n    function generateArray() {\n        const newArray = [];\n        if (!tablet) {\n            for (let i = 0; i < 100; i++) {\n                newArray.push(randomInteger(5, 500));\n            }\n        } else {\n            for (let i = 0; i < 60; i++) {\n                newArray.push(randomInteger(5, 500));\n            }\n        }\n        setArray(newArray);\n        setMadArray(newArray)\n    }\n\n    function randomInteger(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n\n\n    // function onSubmit(e) {\n    //     e.preventDefault();\n    //             setDisable(true);\n    //     setTimeout(() => {\n    //         setDisable(false)\n    //     }, fullArray.length * speed * 20);\n\n    // }\n\n    function disabling() {\n        console.log(disable, speed)\n        options.style.display = \"none\"\n        stop.style.display = \"block\"\n        setTimeout(() => {\n            options.style.display = \"block\"\n            stop.style.display = \"none\"\n        }, speed * fullArray.length * 40);\n        // setCoverDiv(\"block\")\n        console.log(disable, speed)\n    }\n    console.log(document.getElementById(\"coverDiv\"))\n    \n\n        \n    \n\n    return( \n        <div>\n            <div id=\"stop\" style={{display: \"none\"}}>\n            <Button variant=\"light\" size=\"sm\" onClick={makeArray}>Go Back</Button>\n\n            </div>\n        <div className=\"options\" id=\"options\">\n            <div onClick={() => disabling()}>\n            <Button variant=\"light\" size=\"sm\" onClick={() => bubbleSort(fullArray, speed, {setDisable})}>Bubble Sort</Button>\n            <Button variant=\"light\" size=\"sm\" onClick={() => heapSort(fullArray, speed, {setDisable})}>Heap Sort</Button>\n            <Button variant=\"light\" size=\"sm\" onClick={() => selectionSort(fullArray, speed, {setDisable})}>Selection Sort</Button>\n            <Button variant=\"light\" size=\"sm\" onClick={() => quickSort(fullArray, speed, {setDisable})}>Quick Sort</Button>\n            </div>\n            {tablet ? \n            <>\n                <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n            {/* // ) */}\n            {/* <Form.Label style={{color: \"white\", marginBottom: \"0px\"}}>Speed</Form.Label> */}\n            <Row style={{display: \"flex\", alignItems:\"center\", justifyContent: \"center\"}}>\n            <Form.Range disabled={disable} style={{width: \"60vw\", color: \"white\", height: \".8rem\"}} min={1} max={100} value={speed}\n                onChange={changeEvent => setSpeed(changeEvent.target.value)}\n            />\n            </Row>\n            </>\n\n            :\n            // return(  display: \"flex\", flexDirection: \"column\",\n            <div style={{display: {isTablet}, position: \"absolute\", top: \"0vh\", right: \"2vh\"}}>\n            <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n\n                <Form.Label style={{color: \"white\", marginBottom: \"0px\"}}>Speed</Form.Label>\n                <Form.Range disabled={disable} style={{zIndex: \"-2\", width: \"10vw\", color: \"white\", height: \".8rem\"}} min={1} max={100} value={speed}\n                    onChange={changeEvent => setSpeed(changeEvent.target.value)}\n                />\n            </div>\n            // )\n            }\n            {/* < /Form> */}\n            {/* <div style={{position: \"absolute\", display: \"flex\", flexDirection: \"column\", top: \"0vh\", right: \"2vh\"}}>\n            <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n\n                <Form.Label style={{color: \"white\", marginBottom: \"0px\"}}>Speed</Form.Label>\n                <Form.Range style={{width: \"10vw\", color: \"white\", height: \".8rem\"}} min={1} max={500} value={speed}\n                    onChange={changeEvent => setSpeed(changeEvent.target.value)}\n                />\n            </div> */}\n\n        </div>\n\n        <div className=\"array-container\">\n            {madArray !== undefined &&\n                    <div className=\"array\">\n                    {madArray.map((value, idx) => {\n                        return (\n                            <div \n                            className=\"array-bar\" \n                            key={idx}\n                            id={idx}\n                            style={{height: `${value}px`}}\n                            >\n                            </div>                        \n                        )\n                        })}\n                    </div>\n            }\n        </div>\n                    \n\n        </div>\n    )\n}\n\nexport default Visualizer;","import './App.css';\nimport Header from './components/header/Header';\nimport Visualizer from './components/Visualizer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Visualizer></Visualizer>\n    </div>  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}