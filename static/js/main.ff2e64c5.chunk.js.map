{"version":3,"sources":["components/header/Header.js","algorithms/heapSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","algorithms/bubbleSort.js","components/Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","colorArray","heapify","array","length","i","largest","left","right","push","heapSort","speed","disable","Math","floor","k","forEach","item","idx","setTimeout","barI","document","getElementById","barLargest","style","backgroundColor","iHeight","largestHeight","console","log","height","runColors","selectionSort","counter","biggest","begin","num","current","barCurrent","barBiggest","lastBar","lastBarHeight","biggestHeight","quickSortHelper","startIdx","endIdx","pivot","swap","j","quickSort","pivotHeight","leftHeight","rightHeight","barPivot","barLeft","barRight","bubbleSort","isSorted","index","bar1idx","bar2idx","bar1value","bar2value","bar1","bar2","Visualizer","isTablet","useState","fullArray","setArray","madArray","setMadArray","setSpeed","setDisable","useMediaQuery","query","tablet","options","stop","makeArray","e","window","location","reload","randomInteger","min","max","random","useEffect","newArray","generateArray","id","display","Button","variant","size","onClick","Row","alignItems","justifyContent","Form","Range","disabled","width","color","value","onChange","changeEvent","target","position","top","Label","marginBottom","zIndex","undefined","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff2e64c5.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css'\n\nfunction Header() {\n\n    return(\n        <h1 className=\"title\">Sorting Visualizer</h1>\n    )\n}\n\nexport default Header;","let colorArray = [];\n\nfunction heapSort(array, speed, disable) {\n    let countdown = array.length * speed;\n    let length = array.length;\n    let i = Math.floor(length / 2 - 1);\n    let k = length - 1;\n    \n    while (i >= 0) {\n        heapify(array, length, i);\n        i--;\n    }\n\n    while (k >= 0) {\n        [array[0], array[k]] = [array[k], array[0]];\n        colorArray.push([0, k, array[k], array[0]])\n        heapify(array, k, 0);\n        k--;\n    }\n    runColors(colorArray, speed)\n}\n\nfunction runColors(array, speed) {\n    array.forEach((item, idx) => {\n        let i = item[0];\n        let largest = item[1];\n        if (i < 100 && largest < 100) {\n            setTimeout(() => {\n                const barI = document.getElementById(i);\n                const barLargest = document.getElementById(largest);\n                barI.style.backgroundColor = \"purple\";\n                barLargest.style.backgroundColor = \"yellow\";\n                let iHeight = item[2];\n                let largestHeight = item[3];\n                console.log(i, iHeight, largest, largestHeight)\n                setTimeout(() => {\n                    barI.style.height = `${largestHeight}px`;\n                    barLargest.style.height = `${iHeight}px`;\n                    setTimeout(() => {\n                        barI.style.backgroundColor = \"white\";\n                        barLargest.style.backgroundColor = \"white\";\n                    }, speed)\n                }, speed * 2)\n            }, idx * 4 * speed)\n        }\n    }) \n}\n\nfunction heapify(array, length, i) {\n    let largest = i;\n    let left = i * 2 + 1;\n    let right = left + 1;\n\n    if (left < length && array[left] > array[largest]) {\n        largest = left;\n    }\n    if (right < length && array[right] > array[largest]) {\n        largest = right;\n    }\n    if (largest !== i) colorArray.push([i, largest, array[i], array[largest]])\n\n    if (largest !== i) {\n        [array[i], array[largest]] = [array[largest], array[i]];\n        heapify(array, length, largest);\n    }\n}\n\nexport default heapSort;","let colorArray = [];\n\nfunction selectionSort(array, speed, disable) {\n    let counter = array.length - 1;\n    \n    while (counter > 0) {\n        let biggest = 0;\n        for (let i = 0; i <= counter; i++) {\n            colorArray.push([i, biggest, array[i], array[biggest]])\n            if (array[i] > array[biggest]) biggest = i;\n        }\n        [array[biggest], array[counter]] = [array[counter], array[biggest]]\n        counter--;\n    }\n\n    runColors(colorArray, speed)\n    return array;\n}\n\nfunction runColors(array, speed) {\n    let begin = 0;\n\n    for (let num = 0; num < array.length; num++) {\n        setTimeout(() => {\n          let current = array[num][0];\n          let biggest = array[num][1];\n              const barCurrent = document.getElementById(current);\n              const barBiggest = document.getElementById(biggest);\n              barCurrent.style.backgroundColor = \"orange\";\n              barBiggest.style.backgroundColor = \"turquoise\";\n              if (begin !== biggest) {\n                const barStart = document.getElementById(begin);\n                barStart.style.backgroundColor = \"white\";\n                begin = biggest;\n              }\n              if (num === array.length - 1) {\n                const lastBar = document.getElementById(1);\n                const lastBarHeight = array[num][2];\n                const biggestHeight = array[num][3];\n                barBiggest.style.height = `${lastBarHeight}px`;\n                lastBar.style.height = `${biggestHeight}px`;\n                lastBar.style.backgroundColor = \"lightgrey\";\n                barBiggest.style.backgroundColor = \"lightgrey\";\n                return;\n              } else if (array[num + 1][0] === 0 || array[num][0] === 0) {\n                const lastBar = document.getElementById(array[num][0])\n                const lastBarHeight = array[num][2]\n                const biggestHeight = array[num][3]\n                barBiggest.style.height = `${lastBarHeight}px`;\n                lastBar.style.height = `${biggestHeight}px`;\n                lastBar.style.backgroundColor = \"lightgrey\"\n              } else {\n                setTimeout(() => {\n                  barCurrent.style.backgroundColor = \"white\";\n                }, speed)\n              }\n        }, num * speed)\n    }\n}\n\nexport default selectionSort;","const colorArray = [];\n\nfunction quickSort(array, speed, disable) {\n    quickSortHelper(array, 0, array.length - 1);\n    runColors(colorArray, speed)\n    return array;\n  }\n  \n  function quickSortHelper(array, startIdx, endIdx) {\n      if (startIdx >= endIdx) return;\n\n      let pivot = startIdx;\n      let left = startIdx + 1;\n      let right = endIdx;\n\n      while (right >= left) {\n          if (array[left] > array[pivot] && array[right] < array[pivot]) {\n            swap(left, right, array)\n            colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n          if (array[left] <= array[pivot]) {\n              left++; \n              colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n          if (array[right] >= array[pivot]) {\n              right--;\n              colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n      }\n\n      swap(pivot, right, array)\n      colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n      let leftSubarrayIsSmaller = right - 1 - startIdx < endIdx - (right + 1)\n\n      //call the recursion on the smallest subarray first so tail recursion can handle the extra space \n      if (leftSubarrayIsSmaller) {\n          quickSortHelper(array, startIdx, right - 1);\n          quickSortHelper(array, right + 1, endIdx)\n      } else {\n          quickSortHelper(array, right + 1, endIdx);\n          quickSortHelper(array, startIdx, right - 1)\n      }\n  } \n\n  function runColors(array, speed) {\n    for (let i = 0; i < array.length; i++) {\n        setTimeout(() => {\n            const item = array[i]\n            if (item[0] === 100 || item[1] === 100 || item[2] === 100) return;\n            let pivot = item[0];\n            let left = item[1];\n            let right = item[2];\n            const pivotHeight = item[3];\n            const leftHeight = item[4];\n            const rightHeight = item[5];\n            const barPivot = document.getElementById(pivot);\n            const barLeft = document.getElementById(left);\n            const barRight = document.getElementById(right);\n\n            barPivot.style.backgroundColor = \"yellow\";\n            barLeft.style.backgroundColor = \"purple\";\n            barRight.style.backgroundColor = \"red\";\n\n            setTimeout(() => {\n              barPivot.style.height = `${pivotHeight}px`;\n              barLeft.style.height = `${leftHeight}px`;\n              barRight.style.height = `${rightHeight}px`;\n              setTimeout(() => {\n                barLeft.style.backgroundColor = \"white\";\n                barRight.style.backgroundColor = \"white\";\n                barPivot.style.backgroundColor = \"white\";\n              }, speed)\n            }, speed * 2);\n        }, i * speed * 4)\n    }\n  }\n\n  function swap(i, j, array) {\n      [array[i], array[j]] = [array[j], array[i]]\n  }\n\n  export default quickSort;\n  ","let colorArray = [];\n\n\nfunction bubbleSort(array, speed, disable) {\n    let countdown = array.length * speed * 20;\n    let counter = 0;\n    let isSorted = false;\n    while (!isSorted) {\n        isSorted = true;\n        for (let j = 0; j < array.length - counter - 1; j++ ) {\n            colorArray.push([j, j + 1, array[j], array[j + 1]])\n                if (array[j] > array[j + 1]) {\n                    [array[j], array[j + 1]] = [array[j + 1], array[j]];\n                    isSorted = false;\n                }\n        }\n        counter++;\n    }\n    runColors(colorArray, speed)\n}\n\nfunction runColors(array, speed) {\n    array.forEach((item, index) => {\n        setTimeout(() => {\n            \n            const [bar1idx, bar2idx, bar1value, bar2value] = item;\n            const bar1 = document.getElementById(bar1idx);\n            const bar2 = document.getElementById(bar2idx);\n            bar1.style.backgroundColor = \"turquoise\";\n            bar2.style.backgroundColor = \"yellow\";\n            if (bar1value > bar2value) {\n                setTimeout(() => {\n                    bar1.style.height = `${bar2value}px`;\n                    bar2.style.height = `${bar1value}px`;\n                    bar2.style.backgroundColor = \"turquoise\"\n                    bar1.style.backgroundColor = \"yellow\"\n                    setTimeout(() => {\n                        bar1.style.backgroundColor = \"white\";\n                        bar2.style.backgroundColor = \"white\";\n                    }, speed / 4);\n                }, speed/2);\n\n            } else {\n                setTimeout(() => {\n                    bar1.style.backgroundColor = \"white\";\n                    bar2.style.backgroundColor = \"white\"\n                }, speed / 4);\n            }\n        }, index * speed);\n    })\n}\n\nexport default bubbleSort;\n\n","import React, { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport './visualizer.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport heapSort from '../algorithms/heapSort'\nimport selectionSort from '../algorithms/selectionSort'\nimport quickSort from '../algorithms/quickSort'\nimport bubbleSort from '../algorithms/bubbleSort'\n\n\nfunction Visualizer() {\n    const [fullArray, setArray] = useState([]);\n    const [madArray, setMadArray] = useState([])\n    const [speed, setSpeed] = useState(1);\n    const [disable, setDisable] = useState(false)\n    const [tablet, setTablet] = useState(useMediaQuery({ query: '(max-width: 800px)' }))\n\n    const options = document.getElementById(\"options\")\n    const stop = document.getElementById(\"stop\")\n\n    let isTablet;\n    if (tablet) isTablet = \"none\"\n    else isTablet = \"block\"\n\n    useEffect(() => {\n        generateArray();\n    }, [])\n\n    function makeArray(e) {\n        window.location.reload();\n    }\n\n    function generateArray() {\n        const newArray = [];\n        if (!tablet) {\n            for (let i = 0; i < 100; i++) {\n                newArray.push(randomInteger(5, 500));\n            }\n        } else {\n            for (let i = 0; i < 60; i++) {\n                newArray.push(randomInteger(5, 500));\n            }\n        }\n        setArray(newArray);\n        setMadArray(newArray)\n    }\n\n    function randomInteger(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n\n    function disabling() {\n        options.style.display = \"none\"\n        stop.style.display = \"block\"\n        setTimeout(() => {\n            options.style.display = \"block\"\n            stop.style.display = \"none\"\n        }, speed * fullArray.length * 40);\n    }\n    \n\n        \n    \n\n    return( \n        <div>\n            <div id=\"stop\" style={{display: \"none\"}}>\n                <Button variant=\"light\" size=\"sm\" onClick={makeArray}>Go Back</Button>\n            </div>\n            <div className=\"options\" id=\"options\">\n                <div onClick={() => disabling()}>\n                    <Button variant=\"light\" size=\"sm\" onClick={() => bubbleSort(fullArray, speed, {setDisable})}>Bubble Sort</Button>\n                    <Button variant=\"light\" size=\"sm\" onClick={() => heapSort(fullArray, speed, {setDisable})}>Heap Sort</Button>\n                    <Button variant=\"light\" size=\"sm\" onClick={() => selectionSort(fullArray, speed, {setDisable})}>Selection Sort</Button>\n                    <Button variant=\"light\" size=\"sm\" onClick={() => quickSort(fullArray, speed, {setDisable})}>Quick Sort</Button>\n                </div>\n                {tablet ? \n                    <>\n                        <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n                        <Row style={{display: \"flex\", alignItems:\"center\", justifyContent: \"center\"}}>\n                            <Form.Range disabled={disable} style={{width: \"60vw\", color: \"white\", height: \".8rem\"}} min={1} max={100} value={speed}\n                                onChange={changeEvent => setSpeed(changeEvent.target.value)}\n                            />\n                        </Row>\n                    </>\n                :\n                    <div style={{display: {isTablet}, position: \"absolute\", top: \"0vh\", right: \"2vh\"}}>\n                        <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n                        <Form.Label style={{color: \"white\", marginBottom: \"0px\"}}>Speed</Form.Label>\n                        <Form.Range disabled={disable} style={{zIndex: \"-2\", width: \"10vw\", color: \"white\", height: \".8rem\"}} min={1} max={100} value={speed}\n                            onChange={changeEvent => setSpeed(changeEvent.target.value)}\n                        />\n                    </div>\n                }\n            </div>\n\n            <div className=\"array-container\">\n                {madArray !== undefined &&\n                        <div className=\"array\">\n                            {madArray.map((value, idx) => {\n                                return (\n                                    <div \n                                        className=\"array-bar\" \n                                        key={idx}\n                                        id={idx}\n                                        style={{height: `${value}px`}}\n                                    >\n                                    </div>                        \n                                )\n                            })}\n                        </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Visualizer;","import './App.css';\nimport Header from './components/header/Header';\nimport Visualizer from './components/Visualizer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Visualizer />\n    </div>  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}