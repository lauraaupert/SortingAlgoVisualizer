{"version":3,"sources":["components/header/Header.js","algorithms/heapSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","components/Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","colorArray","heapify","array","length","i","console","log","largest","left","right","push","heapSort","speed","Math","floor","k","forEach","item","idx","setTimeout","barI","document","getElementById","barLargest","style","backgroundColor","iHeight","largestHeight","height","selectionSort","counter","biggest","begin","num","current","barCurrent","barBiggest","lastBar","lastBarHeight","biggestHeight","runColors","quickSortHelper","startIdx","endIdx","pivot","swap","j","quickSort","pivotHeight","leftHeight","rightHeight","barPivot","barLeft","barRight","Visualizer","isTablet","useState","fullArray","setArray","colorRight","setColorRight","madArray","setMadArray","setSpeed","useMediaQuery","query","tablet","makeArray","e","window","location","reload","randomInteger","min","max","random","useEffect","newArray","generateArray","Button","variant","size","onClick","bubbleSort","Row","display","alignItems","justifyContent","Form","Range","width","color","value","onChange","changeEvent","target","position","top","Label","marginBottom","undefined","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.15b179fa.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css'\n\nfunction Header() {\n\n    return(\n        <h1 className=\"title\">Sorting Visualizer</h1>\n    )\n}\n\nexport default Header;","let colorArray = [];\n\nfunction heapSort(array, speed) {\n    let length = array.length;\n    let i = Math.floor(length / 2 - 1);\n    let k = length - 1;\n    \n    while (i >= 0) {\n        // (function(i) {\n        // setTimeout(() => {\n        //     console.log(i)\n            heapify(array, length, i);\n            i--;\n\n    //     }, i * 2)\n    // })(i--)\n    }\n\n    while (k >= 0) {\n                [array[0], array[k]] = [array[k], array[0]];\n                colorArray.push([0, k, array[k], array[0]])\n\n                heapify(array, k, 0);\n\n    \n        k--;\n    }\n    console.log(array)\n    console.log(colorArray)\n        colorArray.forEach((item, idx) => {\n            let i = item[0];\n            let largest = item[1];\n            if (i < 100 && largest < 100\n                 ) {\n                setTimeout(() => {\n                    console.log(idx)\n                    const barI = document.getElementById(i);\n                    const barLargest = document.getElementById(largest);\n                    barI.style.backgroundColor = \"purple\";\n                    barLargest.style.backgroundColor = \"yellow\";\n                    let iHeight = item[2];\n                    let largestHeight = item[3];\n                    console.log(i, iHeight, largest, largestHeight)\n                    setTimeout(() => {\n                        barI.style.height = `${largestHeight}px`;\n                        barLargest.style.height = `${iHeight}px`;\n                        setTimeout(() => {\n                            barI.style.backgroundColor = \"white\";\n                            barLargest.style.backgroundColor = \"white\";\n                        }, speed)\n                    }, speed * 2)\n                }, idx * 4 * speed)\n\n            }\n        //     setTimeout(() => {\n        //         setMadArray(array)\n        //     }, colorArray.length * 20)\n        })        \n            \n    return array;\t\n}\n\nfunction heapify(array, length, i) {\n    console.log(length, i)\n    let largest = i;\n    let left = i * 2 + 1;\n    let right = left + 1;\n\n            if (left < length && array[left] > array[largest]) {\n                            largest = left;\n                            // colorRight = largest;\n                            // console.log(colorRight)\n                }\n            if (right < length && array[right] > array[largest]) {\n                largest = right;\n            }\n            if (largest !== i) colorArray.push([i, largest, array[i], array[largest]])\n\n            if (largest !== i) {\n\n                [array[i], array[largest]] = [array[largest], array[i]];\n                heapify(array, length, largest);\n            }\n    \n    }\n\n\n    export default heapSort;","let colorArray = [];\n\nfunction selectionSort(array, speed) {\n    let counter = array.length - 1;\n      \n      while (counter > 0) {\n          let biggest = 0;\n          for (let i = 0; i <= counter; i++) {\n              colorArray.push([i, biggest, array[i], array[biggest]])\n              if (array[i] > array[biggest]) biggest = i;\n          }\n          [array[biggest], array[counter]] = [array[counter], array[biggest]]\n          counter--;\n      }\n      runColors(colorArray, speed)\n      return array;\n  }\n\n  function runColors(array, speed) {\n    let begin = 0;\n\n    for (let num = 0; num < array.length; num++) {\n        setTimeout(() => {\n          let current = array[num][0];\n          let biggest = array[num][1];\n              const barCurrent = document.getElementById(current);\n              const barBiggest = document.getElementById(biggest);\n              barCurrent.style.backgroundColor = \"orange\";\n              barBiggest.style.backgroundColor = \"turquoise\";\n              if (begin !== biggest) {\n                  const barStart = document.getElementById(begin);\n                  barStart.style.backgroundColor = \"white\";\n                  begin = biggest;\n              }\n              if (num === array.length - 1) {\n                const lastBar = document.getElementById(1);\n                const lastBarHeight = array[num][2];\n                const biggestHeight = array[num][3];\n                barBiggest.style.height = `${lastBarHeight}px`;\n                lastBar.style.height = `${biggestHeight}px`;\n                lastBar.style.backgroundColor = \"lightgrey\";\n                barBiggest.style.backgroundColor = \"lightgrey\";\n                return;\n              } else if (array[num + 1][0] === 0 || array[num][0] === 0) {\n                const lastBar = document.getElementById(array[num][0])\n                const lastBarHeight = array[num][2]\n                const biggestHeight = array[num][3]\n                barBiggest.style.height = `${lastBarHeight}px`;\n                lastBar.style.height = `${biggestHeight}px`;\n                lastBar.style.backgroundColor = \"lightgrey\"\n              } else {\n                setTimeout(() => {\n                  barCurrent.style.backgroundColor = \"white\";\n                }, speed)\n              }\n        }, num * speed)\n    }\n  }\n\n\n\n  export default selectionSort;","const colorArray = [];\n\nfunction quickSort(array, speed) {\n    quickSortHelper(array, 0, array.length - 1);\n    runColors(colorArray, speed)\n    console.log(array)\n    console.log(colorArray)\n      return array;\n  }\n  \n  function quickSortHelper(array, startIdx, endIdx) {\n      if (startIdx >= endIdx) {\n          return;\n      }\n      let pivot = startIdx;\n      let left = startIdx + 1;\n      let right = endIdx;\n      while (right >= left) {\n          if (array[left] > array[pivot] && array[right] < array[pivot]) {\n            swap(left, right, array)\n            colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n          if (array[left] <= array[pivot]) {\n              left++; \n              colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n          if (array[right] >= array[pivot]) {\n              right--;\n              colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n          }\n      }\n\n      swap(pivot, right, array)\n      colorArray.push([pivot, left, right, array[pivot], array[left], array[right]])\n      let leftSubarrayIsSmaller = right - 1 - startIdx < endIdx - (right + 1)\n      //call the recursion on the smallest subarray first so tail recursion can handle the extra space \n      if (leftSubarrayIsSmaller) {\n          quickSortHelper(array, startIdx, right - 1);\n          quickSortHelper(array, right + 1, endIdx)\n      } else {\n          quickSortHelper(array, right + 1, endIdx);\n          quickSortHelper(array, startIdx, right - 1)\n      }\n  } \n\n  function runColors(array, speed) {\n    for (let i = 0; i < array.length; i++) {\n          setTimeout(() => {\n            const item = array[i]\n            if (item[0] === 100 || item[1] === 100 || item[2] === 100) return;\n            let pivot = item[0];\n            let left = item[1];\n            let right = item[2];\n            const pivotHeight = item[3];\n            const leftHeight = item[4];\n            const rightHeight = item[5];\n            const barPivot = document.getElementById(pivot);\n            const barLeft = document.getElementById(left);\n            const barRight = document.getElementById(right);\n\n            barPivot.style.backgroundColor = \"yellow\";\n            barLeft.style.backgroundColor = \"purple\";\n            barRight.style.backgroundColor = \"red\";\n\n            setTimeout(() => {\n              barPivot.style.height = `${pivotHeight}px`;\n              barLeft.style.height = `${leftHeight}px`;\n              barRight.style.height = `${rightHeight}px`;\n              setTimeout(() => {\n                // barPivot.style.backgroundColor = \"white\";\n                barLeft.style.backgroundColor = \"white\";\n                barRight.style.backgroundColor = \"white\";\n                barPivot.style.backgroundColor = \"white\";\n  \n              }, speed)\n  \n            }, speed * 2);\n          }, i * speed * 4)\n        }}\n\n  function swap(i, j, array) {\n      [array[i], array[j]] = [array[j], array[i]]\n  }\n\n  export default quickSort;\n  ","import React, { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport './visualizer.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport heapSort from '../algorithms/heapSort'\nimport selectionSort from '../algorithms/selectionSort'\nimport quickSort from '../algorithms/quickSort'\n\n\nfunction Visualizer() {\n    const [fullArray, setArray] = useState([]);\n    let [colorRight, setColorRight] = useState();\n\n    const [madArray, setMadArray] = useState([])\n    const [speed, setSpeed] = useState(1);\n\n    const [tablet, setTablet] = useState(useMediaQuery({ query: '(max-width: 800px)' }))\n\n    let isTablet;\n    if (tablet) isTablet = \"none\"\n    else isTablet = \"block\"\n\n    // const isTabletOrMobile = useMediaQuery({ query: '(max-width: 800px)' })\n    // console.log(isTabletOrMobile)\n    // setTablet(isTabletOrMobile)\n    console.log(tablet)\n\n    useEffect(() => {\n        generateArray();\n    }, [])\n\n    function makeArray(e) {\n        window.location.reload();\n    }\n\n    function generateArray() {\n        const newArray = [];\n        if (!tablet) {\n            for (let i = 0; i < 100; i++) {\n                newArray.push(randomInteger(5, 500));\n            }\n        } else {\n            for (let i = 0; i < 60; i++) {\n                newArray.push(randomInteger(5, 500));\n            }\n        }\n        setArray(newArray);\n        setMadArray(newArray)\n        \n    }\n\n    function randomInteger(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n\n    function bubbleSort(array, speed) {\n\n        for (let i = 0; i < array.length - 1; i++) {\n\n            for (let j = 0; j < array.length -1; j++ ) {\n                setTimeout(() => {\n                    if (array[j] > array[j + 1]) {\n                        [array[j], array[j + 1]] = [array[j + 1], array[j]];\n                        setColorRight(j + 1)\n                        // setMadArray(array)\n                    } else {\n                        setColorRight(400)\n                    }\n                }, i * speed)\n            }\n        }\n    }\n\n        \n    \n\n    return( \n        <div>\n        <div className=\"options\">\n            <Button variant=\"light\" size=\"sm\" onClick={() => bubbleSort(fullArray, speed)}>Bubble Sort</Button>\n            <Button variant=\"light\" size=\"sm\" onClick={() => heapSort(fullArray, speed)}>Heap Sort</Button>\n            <Button variant=\"light\" size=\"sm\" onClick={() => selectionSort(fullArray, speed)}>Selection Sort</Button>\n            <Button variant=\"light\" size=\"sm\" onClick={() => quickSort(fullArray, speed)}>Quick Sort</Button>\n            {tablet ? \n            <>\n                <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n            {/* // ) */}\n            {/* <Form.Label style={{color: \"white\", marginBottom: \"0px\"}}>Speed</Form.Label> */}\n            <Row style={{display: \"flex\", alignItems:\"center\", justifyContent: \"center\"}}>\n            <Form.Range style={{width: \"60vw\", color: \"white\", height: \".8rem\"}} min={1} max={500} value={speed}\n                onChange={changeEvent => setSpeed(changeEvent.target.value)}\n            />\n            </Row>\n            </>\n\n            :\n            // return(  display: \"flex\", flexDirection: \"column\",\n            <div style={{display: {isTablet}, position: \"absolute\", top: \"0vh\", right: \"2vh\"}}>\n            <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n\n                <Form.Label style={{color: \"white\", marginBottom: \"0px\"}}>Speed</Form.Label>\n                <Form.Range style={{width: \"10vw\", color: \"white\", height: \".8rem\"}} min={1} max={500} value={speed}\n                    onChange={changeEvent => setSpeed(changeEvent.target.value)}\n                />\n            </div>\n            // )\n            }\n\n            {/* <div style={{position: \"absolute\", display: \"flex\", flexDirection: \"column\", top: \"0vh\", right: \"2vh\"}}>\n            <Button variant=\"light\" size=\"sm\" onClick={makeArray}>New Array</Button>\n\n                <Form.Label style={{color: \"white\", marginBottom: \"0px\"}}>Speed</Form.Label>\n                <Form.Range style={{width: \"10vw\", color: \"white\", height: \".8rem\"}} min={1} max={500} value={speed}\n                    onChange={changeEvent => setSpeed(changeEvent.target.value)}\n                />\n            </div> */}\n\n        </div>\n\n        <div className=\"array-container\">\n            {madArray !== undefined &&\n                    <div className=\"array\">\n                    {madArray.map((value, idx) => {\n                        // console.log(value, idx)\n                        return (\n                            idx === colorRight ?\n                            <div \n                            className=\"array-bar\" \n                            key={idx}\n                            id={idx}\n                            style={{height: `${value}px`, backgroundColor: \"green\"}}\n                            >\n                                {/* {idx} */}\n                        </div>\n                        :\n                        idx !== 100 &&\n                        <div \n                            className=\"array-bar\" \n                            key={idx}\n                            id={idx}\n                            style={{height: `${value}px`}}\n                            >\n                                {/* {idx} */}\n                        </div>\n                        \n                        \n                        )\n                        })}\n                    </div>\n                    // :\n\n}\n                </div>\n                    \n\n        </div>\n    )\n}\n\nexport default Visualizer;","import './App.css';\nimport Header from './components/header/Header';\nimport Visualizer from './components/Visualizer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Visualizer></Visualizer>\n    </div>  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}